import alquimistas.*

describe "testDeAlquimistas"{
	
	test "Un alquimista tiene criterio"{
		assert.that(alquimista.tieneCriterio())
	}
	
	test "Un alquimista tiene criterio cuando no tiene items de combate"{
		assert.that(alquimista.tieneCriterio())
	}
	
	test "Un alquimista tiene criterio cuando tiene items de combate"{
		bomba.cambiarDanio(300)
		alquimista.agregarItemDeCombate(bomba)
		pocion.cambiarPoderCurativo(100)
		alquimista.agregarItemDeCombate(pocion)
		assert.that(alquimista.tieneCriterio())
		
	}
	
	test "Un alquimista es buen explorador"{
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		assert.that(alquimista.esBuenExplorador())
	}
	
	test "Un alquimista no es buen explorador"{
		assert.that(alquimista.esBuenExplorador().negate())
	}
	
	test "Un alquimista no tiene capacidad ofensiva (es 0)"{
		assert.that(alquimista.capacidadOfensiva()==0)
	}
	
	test "Capacidad ofensiva de la bomba"{
		bomba.cambiarDanio(200)
		assert.that(bomba.capacidadOfensiva()==100)
	}
	
	test "Capacidad ofensiva de la pocion sin materiales misticos"{
		pocion.cambiarPoderCurativo(100)
		assert.that(pocion.capacidadOfensiva()==100)		
	}
	
	test "Capacidad ofensiva de la pocion con materiales misticos (3)"{
		pocion.cambiarPoderCurativo(100)
		pocion.agregarMaterial(unMaterialMistico)
		pocion.agregarMaterial(unMaterialMistico)
		pocion.agregarMaterial(unMaterialMistico)
		pocion.agregarMaterial(unMaterial)
		assert.that(pocion.capacidadOfensiva()==130)
		
	}
	
	test "Capacidad ofensiva del debilitador sin materiales misticos"{
		assert.that(debilitador.capacidadOfensiva()==5)
	}
	
	test "Capacidad ofensiva del debilitador con materiales misticos"{
		debilitador.agregarMaterial(unMaterialMistico)
		debilitador.agregarMaterial(unMaterial)
		debilitador.agregarMaterial(unMaterial)
		debilitador.agregarMaterial(unMaterial)
		assert.that(debilitador.capacidadOfensiva()==48)
	}
	
	test "Capacidad ofensiva de un alquimista con items de combate"{
		 bomba.cambiarDanio(100)
		 alquimista.agregarItemDeCombate(bomba)              // 50 de la bomba
		 pocion.cambiarPoderCurativo(100)                  
		 pocion.agregarMaterial(unMaterialMistico)
		 pocion.agregarMaterial(unMaterialMistico)
		 alquimista.agregarItemDeCombate(pocion)            // 120 de la pocion
		 debilitador.agregarMaterial(unMaterialMistico)
		 debilitador.agregarMaterial(unMaterial)
		 debilitador.agregarMaterial(unMaterial)
		 alquimista.agregarItemDeCombate(debilitador)      // 36 del debilitador
		 assert.that(alquimista.capacidadOfensiva()==206)
	}
	
	test "Calidad de la bomba"{
		bomba.agregarMaterial(unMaterial)
		bomba.agregarMaterial(unMaterialMistico)
		assert.that(bomba.calidad()==10)
	}
	
	test "Calidad de la pocion cuando tiene un material mistico"{
		pocion.agregarMaterial(unMaterialMistico)
		pocion.agregarMaterial(unMaterial)
		pocion.agregarMaterial(otroMaterialMistico)
		assert.that(pocion.calidad()==20)
		
	}
	
	test "Calidad de la pocion cuando no tiene un material mistico"{
		pocion.agregarMaterial(unMaterial)
		pocion.agregarMaterial(otroMaterial)
		assert.that(pocion.calidad()==10)
		
	}
	
	test "Calidad del debilitador cuando no tiene materiales"{
		assert.that(debilitador.calidad()==0)
	}
	
	test "Calidad del debilitador cuando tiene un solo material"{
		debilitador.agregarMaterial(unMaterial)
		assert.that(debilitador.calidad()==5)
		
	}
	
	test "Calidad del debilitador cuando tiene varios materiales"{
		debilitador.agregarMaterial(unMaterial)               // tiene calidad 10
		debilitador.agregarMaterial(otroMaterial)             // tiene calidad 5
		debilitador.agregarMaterial(unMaterialMistico)        // tiene calidad 20
		debilitador.agregarMaterial(otroMaterialMistico)      // tiene calidad 30
		assert.that(debilitador.calidad()==25)                // (20+30)/2 = 25
	}
	
	test "Suma de las calidades de los items de combate de un alquimista"{
		bomba.agregarMaterial(unMaterial)
		bomba.agregarMaterial(unMaterialMistico)
		alquimista.agregarItemDeCombate(bomba)               // calidad bomba = 10
		pocion.agregarMaterial(unMaterialMistico)
		pocion.agregarMaterial(unMaterial)
		pocion.agregarMaterial(otroMaterialMistico)
		alquimista.agregarItemDeCombate(pocion)              // calidad pocion = 20
		debilitador.agregarMaterial(unMaterial)               
		debilitador.agregarMaterial(otroMaterial)             
		debilitador.agregarMaterial(unMaterialMistico)        
		debilitador.agregarMaterial(otroMaterialMistico)  
		alquimista.agregarItemDeCombate(debilitador)         // calidad debilitador = 25
		assert.that(alquimista.calidadItemsCombate()== 55)   // calidad total = 10 + 20 + 25 = 55
		
	}
	
	test "Calidad de los items de recoleccion de un alquimista"{
	    bomba.agregarMaterial(otroMaterialMistico)
	    alquimista.agregarItemDeRecoleccion(bomba)                   // calidad bomba = 30
	    pocion.agregarMaterial(unMaterial)
	    pocion.agregarMaterial(unMaterialMistico)
	    alquimista.agregarItemDeRecoleccion(pocion)                  //  calidad pocion = 20
	    debilitador.agregarMaterial(unMaterial)
	    debilitador.agregarMaterial(unMaterial)
	    alquimista.agregarItemDeRecoleccion(debilitador)             // calidad debilitador = 10
	    assert.that(alquimista.calidadItemsRecoleccion()==36)        // calidad total de items de recoleccion = 30 + 60/10 = 36
	}
	
	test "Promedio de la calidad de los items de un alquimista cuando no tiene ninguo"{
		assert.that(alquimista.promedioCalidadItems()==0)
	}
	
	test "Promedio de la calidad de los items de un alquimista cuando solo tiene items de combate"{
		bomba.agregarMaterial(otroMaterialMistico)
		alquimista.agregarItemDeCombate(bomba) 
		pocion.agregarMaterial(otroMaterialMistico) 
		alquimista.agregarItemDeCombate(pocion)
		assert.that(alquimista.promedioCalidadItems()==45)           // calidad promedio = (60+30)/(2+0)
	}
	
	test "Promedio de la calidad de los items de un alquimista cuando solo tiene items de recoleccion"{
		bomba.agregarMaterial(unMaterial)
		alquimista.agregarItemDeRecoleccion(bomba) 
		pocion.agregarMaterial(otroMaterialMistico) 
		alquimista.agregarItemDeRecoleccion(pocion) 
		assert.that(alquimista.promedioCalidadItems()==17)           // calidad promedio = (0+(30+(40/10)))/2
	}
	
	
	test "Promedio de la calidad de los items de un alquimista cuando tiene items de combate y recoleccion"{
		bomba.agregarMaterial(unMaterial)
		alquimista.agregarItemDeCombate(bomba)
		pocion.agregarMaterial(unMaterialMistico)
		alquimista.agregarItemDeCombate(pocion)
		debilitador.agregarMaterial(unMaterialMistico)
		debilitador.agregarMaterial(unMaterialMistico)
		alquimista.agregarItemDeRecoleccion(debilitador)
		assert.that(alquimista.promedioCalidadItems()== 20.66667)    // ((10+20) + (30+2)) / 2+1 = 62/3
	}
	
	
	test "Todos los items de combate del alquimista son efectivos"{
		bomba.cambiarDanio(500)
		pocion.cambiarPoderCurativo(100)
		pocion.agregarMaterial(unMaterialMistico)
		debilitador.cambiarPotencia(100)
		debilitador.agregarMaterial(unMaterial)
		debilitador.agregarMaterial(unMaterial)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(pocion)
		alquimista.agregarItemDeCombate(debilitador)
		assert.that(alquimista.todosLosItemsDeCombateSonEfectivos())
	}
	
	
	test "Un alquimista no es profesional si no es buen explorador "{
		bomba.agregarMaterial(otroMaterialMistico)
		bomba.cambiarDanio(100)
		pocion.cambiarPoderCurativo(100)
		pocion.agregarMaterial(unMaterialMistico)
		debilitador.cambiarPotencia(100)
		debilitador.agregarMaterial(unMaterial)
		debilitador.agregarMaterial(unMaterial)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(pocion)
		alquimista.agregarItemDeCombate(debilitador)
		assert.that(alquimista.esProfesional().negate())		
	}
	
	test "Un alquimista no es profesional si la calidad promedio de todos sus items no es mayor a 50"{
		bomba.cambiarDanio(100)
		bomba.agregarMaterial(unMaterial)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		assert.that(alquimista.esProfesional().negate())
	}
	
	test "Un alquimista no es profesional si todos sus items de combate no son efectivos"{
		bomba.agregarMaterial(elMejorMaterial)
		bomba.cambiarDanio(20)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		assert.that(alquimista.esProfesional().negate())
	}
	
	test "Un alquimista es profesional"{
		bomba.agregarMaterial(elMejorMaterial)
		bomba.cambiarDanio(500)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		alquimista.agregarItemDeRecoleccion(bomba)
		assert.that(alquimista.esProfesional())
	}
}